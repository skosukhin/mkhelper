FC=@FC@
FCFLAGS=@FCFLAGS@
LDFLAGS=@LDFLAGS@
LIBS=@LIBS@

# Add definitions
FCFLAGS+=@FC_DEFINE@PRINT_MOD_STRINGS

src_dir=@srcdir@/src
src_f90_files=$(shell find $(src_dir) -name '*.f90')

dep_dir=dep
dep_f90_files=$(patsubst $(src_dir)/%.f90, $(dep_dir)/%.d, $(src_f90_files))

obj_dir=obj
mod_dir=mod

# Dependency generator
dep_gen=python -S @srcdir@/mkhelper/dep_generator
# The dependency generator ignores these modules as dependencies
dep_external_mods="iso_c_binding,iso_fortran_env,ieee_exceptions,ieee_arithmetic,ieee_features,omp_lib,omp_lib_kinds,openacc,mpi"
dep_gen_flags=--mod-file-ext=@FORTDEP_MODULE_FILE_EXT@ --mod-file-upper=@FORTDEP_MODULE_FILE_UPPER@\
              --inc-order=@FORTDEP_INC_ORDER@ --inc-pp-order=@FORTDEP_INC_PP_ORDER@\
              --external-mods=$(dep_external_mods)\
              --fc-def-flag=@FC_DEFINE@ --fc-mod-out-flag=@FC_MODOUT@\
              --inc-root=$(src_dir) --try-eval-pp-expr --debug

# Dependency collector
dep_collector=python -S @srcdir@/mkhelper/dep_collector
# Function that collects all *.o prerequisites of a given target.
required_objs=$(shell $(dep_collector) -p '*.o' $(1) $(shell find $(2) -name '*.d'))

# Disable suffix rules
.SUFFIXES:
# These targets are not associated with files
.PHONY: all clean distclean
# Keep created directories
.PRECIOUS: %/.sentinel
.SECONDEXPANSION:

FCFLAGS:=@FC_MODINC@$(mod_dir) -I$(src_dir)/include $(FCFLAGS) @FC_MODOUT@$(mod_dir)

all: main;

main : $(obj_dir)/main.o
	$(FC) -o $@ $(LDFLAGS) $< $(call required_objs, $<, $(dep_dir)) $(LIBS)

%.@FORTDEP_MODULE_FILE_EXT@:
	@if test -f $@; then :; else rm -f $<; $(MAKE) $<; fi

$(obj_dir)/%.o : $(src_dir)/%.f90 $(mod_dir)/.sentinel $$(@D)/.sentinel
	$(FC) $(FCFLAGS) @FCFLAGS_f90@ -c $< -o $@

$(dep_dir)/%.d : $(src_dir)/%.f90 $$(@D)/.sentinel
	@$(dep_gen) $< $@ --compile-target $(patsubst $(dep_dir)/%.d, $(obj_dir)/%.o, $@) $(dep_gen_flags) -- $(FCFLAGS) 2> /dev/null

%/.sentinel:
	@echo Creating directory $(@D); mkdir -p $(@D); touch $@

depclean:
	rm -rf $(dep_dir)

clean:
	rm -rf $(mod_dir) $(obj_dir)

distclean:
	@$(MAKE) clean depclean
	rm -f config.log config.status Makefile

ifeq (,$(filter $(MAKECMDGOALS), clean depclean distclean))
-include $(dep_f90_files)
endif
